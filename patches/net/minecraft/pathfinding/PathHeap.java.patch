--- ../src-base/minecraft/net/minecraft/pathfinding/PathHeap.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/PathHeap.java
@@ -3,7 +3,7 @@
 public class PathHeap
 {
     private PathPoint[] pathPoints = new PathPoint[128];
-    private int count;
+    private int  count;
 
     public PathPoint addPoint(PathPoint point)
     {
@@ -21,21 +21,23 @@
             }
 
             this.pathPoints[this.count] = point;
-            point.index = this.count;
-            this.sortBack(this.count++);
+            point.index=this.count;
+            int i = this.count;
+            this.sortBack(i++);
             return point;
         }
     }
 
     public void clearPath()
     {
-        this.count = 0;
+        this.count=0;
     }
 
     public PathPoint dequeue()
     {
         PathPoint pathpoint = this.pathPoints[0];
-        this.pathPoints[0] = this.pathPoints[--this.count];
+        int b = this.count;
+        this.pathPoints[0] = this.pathPoints[--b];
         this.pathPoints[this.count] = null;
 
         if (this.count > 0)
@@ -43,7 +45,7 @@
             this.sortForward(0);
         }
 
-        pathpoint.index = -1;
+        pathpoint.index=-1;
         return pathpoint;
     }
 
@@ -78,11 +80,11 @@
             }
 
             this.pathPoints[index] = pathpoint1;
-            pathpoint1.index = index;
+            pathpoint1.index=index;
         }
 
         this.pathPoints[index] = pathpoint;
-        pathpoint.index = index;
+        pathpoint.index=index;
     }
 
     private void sortForward(int index)
@@ -124,7 +126,7 @@
                 }
 
                 this.pathPoints[index] = pathpoint1;
-                pathpoint1.index = index;
+                pathpoint1.index=index;
                 index = i;
             }
             else
@@ -135,13 +137,13 @@
                 }
 
                 this.pathPoints[index] = pathpoint2;
-                pathpoint2.index = index;
+                pathpoint2.index=index;
                 index = j;
             }
         }
 
         this.pathPoints[index] = pathpoint;
-        pathpoint.index = index;
+        pathpoint.index=index;
     }
 
     public boolean isPathEmpty()
