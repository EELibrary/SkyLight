--- ../src-base/minecraft/net/minecraft/pathfinding/PathWorldListener.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/PathWorldListener.java
@@ -1,7 +1,10 @@
 package net.minecraft.pathfinding;
 
 import com.google.common.collect.Lists;
+
+import java.util.Collections;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 import javax.annotation.Nullable;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.Entity;
@@ -16,30 +19,20 @@
 
 public class PathWorldListener implements IWorldEventListener
 {
-    private final List<PathNavigate> navigations = Lists.<PathNavigate>newArrayList();
+    private final List<PathNavigate> navigations = new CopyOnWriteArrayList<>();
 
     public void notifyBlockUpdate(World worldIn, BlockPos pos, IBlockState oldState, IBlockState newState, int flags)
     {
-        if (this.didBlockChange(worldIn, pos, oldState, newState))
-        {
-            int i = 0;
-
-            for (int j = this.navigations.size(); i < j; ++i)
-            {
-                PathNavigate pathnavigate = this.navigations.get(i);
-
-                if (pathnavigate != null && !pathnavigate.canUpdatePathOnTimeout())
-                {
+        if (this.didBlockChange(worldIn, pos, oldState, newState)) {
+            for (PathNavigate pathnavigate : this.navigations) {
+                if (pathnavigate != null && !pathnavigate.canUpdatePathOnTimeout()) {
                     Path path = pathnavigate.getPath();
-
-                    if (path != null && !path.isFinished() && path.getCurrentPathLength() != 0)
-                    {
+                    if (path != null && !path.isFinished() && path.getCurrentPathLength() != 0) {
                         PathPoint pathpoint = pathnavigate.currentPath.getFinalPathPoint();
-                        double d0 = pos.distanceSq(((double)pathpoint.x + pathnavigate.entity.posX) / 2.0D, ((double)pathpoint.y + pathnavigate.entity.posY) / 2.0D, ((double)pathpoint.z + pathnavigate.entity.posZ) / 2.0D);
+                        double d0 = pos.distanceSq(((double) pathpoint.x + pathnavigate.entity.posX) / 2.0D, ((double) pathpoint.y + pathnavigate.entity.posY) / 2.0D, ((double) pathpoint.z + pathnavigate.entity.posZ) / 2.0D);
                         int k = (path.getCurrentPathLength() - path.getCurrentPathIndex()) * (path.getCurrentPathLength() - path.getCurrentPathIndex());
 
-                        if (d0 < (double)k)
-                        {
+                        if (d0 < (double) k) {
                             pathnavigate.updatePath();
                         }
                     }
