--- ../src-base/minecraft/net/minecraft/advancements/Advancement.java
+++ ../src-work/minecraft/net/minecraft/advancements/Advancement.java
@@ -8,6 +8,7 @@
 import com.google.gson.JsonSyntaxException;
 import java.io.IOException;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.Map;
 import java.util.Set;
 import java.util.function.Function;
@@ -30,14 +31,15 @@
     private final ResourceLocation id;
     private final Map<String, Criterion> criteria;
     private final String[][] requirements;
-    private final Set<Advancement> children = Sets.<Advancement>newLinkedHashSet();
+    private final Set<Advancement> children = Collections.synchronizedSet(Sets.<Advancement>newLinkedHashSet());
     private final ITextComponent displayText;
+    public final org.bukkit.advancement.Advancement bukkit = new org.bukkit.craftbukkit.advancement.CraftAdvancement(this);
 
     public Advancement(ResourceLocation id, @Nullable Advancement parentIn, @Nullable DisplayInfo displayIn, AdvancementRewards rewardsIn, Map<String, Criterion> criteriaIn, String[][] requirementsIn)
     {
         this.id = id;
         this.display = displayIn;
-        this.criteria = ImmutableMap.copyOf(criteriaIn);
+        this.criteria = Collections.synchronizedMap(ImmutableMap.copyOf(criteriaIn));
         this.parent = parentIn;
         this.rewards = rewardsIn;
         this.requirements = requirementsIn;
@@ -68,9 +70,9 @@
         }
     }
 
-    public Advancement.Builder copy()
+    public Builder copy()
     {
-        return new Advancement.Builder(this.parent == null ? null : this.parent.getId(), this.display, this.rewards, this.criteria, this.requirements);
+        return new Builder(this.parent == null ? null : this.parent.getId(), this.display, this.rewards, this.criteria, this.requirements);
     }
 
     @Nullable
@@ -230,7 +232,7 @@
                 return "Task Advancement{parentId=" + this.parentId + ", display=" + this.display + ", rewards=" + this.rewards + ", criteria=" + this.criteria + ", requirements=" + Arrays.deepToString(this.requirements) + '}';
             }
 
-            public static Advancement.Builder deserialize(JsonObject json, JsonDeserializationContext context)
+            public static Builder deserialize(JsonObject json, JsonDeserializationContext context)
             {
                 ResourceLocation resourcelocation = json.has("parent") ? new ResourceLocation(JsonUtils.getString(json, "parent")) : null;
                 DisplayInfo displayinfo = json.has("display") ? DisplayInfo.deserialize(JsonUtils.getJsonObject(json, "display"), context) : null;
@@ -303,11 +305,11 @@
                         }
                     }
 
-                    return new Advancement.Builder(resourcelocation, displayinfo, advancementrewards, map, astring);
+                    return new Builder(resourcelocation, displayinfo, advancementrewards, map, astring);
                 }
             }
 
-            public static Advancement.Builder readFrom(PacketBuffer buf) throws IOException
+            public static Builder readFrom(PacketBuffer buf) throws IOException
             {
                 ResourceLocation resourcelocation = buf.readBoolean() ? buf.readResourceLocation() : null;
                 DisplayInfo displayinfo = buf.readBoolean() ? DisplayInfo.read(buf) : null;
@@ -324,7 +326,7 @@
                     }
                 }
 
-                return new Advancement.Builder(resourcelocation, displayinfo, AdvancementRewards.EMPTY, map, astring);
+                return new Builder(resourcelocation, displayinfo, AdvancementRewards.EMPTY, map, astring);
             }
         }
 }
