--- ../src-base/minecraft/net/minecraft/entity/passive/EntityChicken.java
+++ ../src-work/minecraft/net/minecraft/entity/passive/EntityChicken.java
@@ -1,6 +1,8 @@
 package net.minecraft.entity.passive;
 
 import com.google.common.collect.Sets;
+
+import java.util.Collections;
 import java.util.Set;
 import javax.annotation.Nullable;
 import net.minecraft.block.Block;
@@ -35,7 +37,7 @@
 
 public class EntityChicken extends EntityAnimal
 {
-    private static final Set<Item> TEMPTATION_ITEMS = Sets.newHashSet(Items.WHEAT_SEEDS, Items.MELON_SEEDS, Items.PUMPKIN_SEEDS, Items.BEETROOT_SEEDS);
+    private static final Set<Item> TEMPTATION_ITEMS = Collections.synchronizedSet(Sets.newHashSet(Items.WHEAT_SEEDS, Items.MELON_SEEDS, Items.PUMPKIN_SEEDS, Items.BEETROOT_SEEDS));
     public float wingRotation;
     public float destPos;
     public float oFlapSpeed;
@@ -78,6 +80,9 @@
 
     public void onLivingUpdate()
     {
+        if (this.isChickenJockey()) {
+            this.persistenceRequired = !this.canDespawn();
+        }
         super.onLivingUpdate();
         this.oFlap = this.wingRotation;
         this.oFlapSpeed = this.destPos;
@@ -101,7 +106,9 @@
         if (!this.world.isRemote && !this.isChild() && !this.isChickenJockey() && --this.timeUntilNextEgg <= 0)
         {
             this.playSound(SoundEvents.ENTITY_CHICKEN_EGG, 1.0F, (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F);
+            this.forceDrops = true;
             this.dropItem(Items.EGG, 1);
+            this.forceDrops = false;
             this.timeUntilNextEgg = this.rand.nextInt(6000) + 6000;
         }
     }
@@ -174,7 +181,7 @@
         compound.setInteger("EggLayTime", this.timeUntilNextEgg);
     }
 
-    protected boolean canDespawn()
+    public boolean canDespawn()
     {
         return this.isChickenJockey() && !this.isBeingRidden();
     }
